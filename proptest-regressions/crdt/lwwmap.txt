# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 03840aa9b8b4ab42f74e67cd33abe1385420af90f49f310758462df191273eaa # shrinks to a = LWWMap { keys: LWWSet { adds: {false: HybridLogicalClock { timestamp: 1970-01-01T00:00:00Z, counter: 0, node_id: 00000000-0000-0000-0000-000000000000 }}, removes: {false: HybridLogicalClock { timestamp: 1970-01-01T00:00:00Z, counter: 0, node_id: 00000000-0000-0000-0000-000000000000 }} }, values: {} }, b = LWWMap { keys: LWWSet { adds: {false: HybridLogicalClock { timestamp: 1970-01-01T00:00:00Z, counter: 0, node_id: 00000000-0000-0000-0000-000000000000 }}, removes: {} }, values: {false: Max(false)} }, c = LWWMap { keys: LWWSet { adds: {true: HybridLogicalClock { timestamp: 1970-01-01T00:00:00Z, counter: 0, node_id: 00000000-0000-0000-0000-000000000000 }}, removes: {} }, values: {true: Max(false)} }
cc 1657c1505a185344e408406fd44c6cccc5e38c5ce9945fe66fd599284a897302 # shrinks to a = LWWMap { keys: LWWSet { adds: {false: HybridLogicalClock { timestamp: 1970-01-01T00:00:00Z, counter: 0, node_id: 00000000-0000-0000-0000-000000000000 }}, removes: {} }, values: {false: Max(false)} }, b = LWWMap { keys: LWWSet { adds: {false: HybridLogicalClock { timestamp: 1970-01-01T00:00:00Z, counter: 0, node_id: 00000000-0000-0000-0000-000000000000 }, true: HybridLogicalClock { timestamp: 1970-01-01T00:00:00Z, counter: 0, node_id: 00000000-0000-0000-0000-000000000000 }}, removes: {false: HybridLogicalClock { timestamp: 1970-01-01T00:00:00Z, counter: 0, node_id: 00000000-0000-0000-0000-000000000000 }} }, values: {true: Max(false)} }
cc c010bf3aaf9ae61510c1d3d8e8a8c3a514dcef37d7eea8cddace76c99fcec0b0 # shrinks to a = LWWMap { keys: LWWSet { adds: {true: HybridLogicalClock { timestamp: 1970-01-01T00:00:00Z, counter: 0, node_id: 00000000-0000-0000-0000-000000000000 }}, removes: {true: HybridLogicalClock { timestamp: 1970-01-01T00:00:02Z, counter: 0, node_id: 00000000-0000-0000-0000-000000000000 }} }, values: {} }, b = LWWMap { keys: LWWSet { adds: {true: HybridLogicalClock { timestamp: 1970-01-01T00:00:00Z, counter: 0, node_id: 00000000-0000-0000-0000-000000000000 }}, removes: {} }, values: {true: Max(false)} }, c = LWWMap { keys: LWWSet { adds: {true: HybridLogicalClock { timestamp: 1970-01-01T00:00:02Z, counter: 1, node_id: 00000000-0000-0000-0000-000000000000 }}, removes: {true: HybridLogicalClock { timestamp: 1970-01-01T00:00:00Z, counter: 0, node_id: 00000000-0000-0000-0000-000000000000 }} }, values: {} }
cc 100d4731c0aa5da1326e58a13a5b33bf1cdd8e1ad57814850dd6431d0ae8b658 # shrinks to v = LWWMap { keys: LWWSet { adds: {false: HybridLogicalClock { timestamp: 1970-01-01T00:00:00Z, counter: 0, node_id: 00000000-0000-0000-0000-000000000000 }}, removes: {false: HybridLogicalClock { timestamp: 1970-01-01T00:00:01Z, counter: 0, node_id: 00000000-0000-0000-0000-000000000000 }} }, values: {false: Max(false)} }
cc c25163a691906ac25f81ef56a83ae31d0dfd274f0be76254f3f87005687a61bd # shrinks to a = LWWMap { keys: LWWSet { adds: {true: HybridLogicalClock { timestamp: 1970-01-01T00:00:00Z, counter: 0, node_id: 00000000-0000-0000-0000-000000000000 }}, removes: {true: HybridLogicalClock { timestamp: 1970-01-01T00:00:01Z, counter: 1, node_id: 00000000-0000-0000-0000-000000000002 }} }, values: {} }, b = LWWMap { keys: LWWSet { adds: {true: HybridLogicalClock { timestamp: 1970-01-01T00:00:01Z, counter: 0, node_id: 00000000-0000-0000-0000-000000000000 }}, removes: {} }, values: {true: Max(true)} }, c = LWWMap { keys: LWWSet { adds: {true: HybridLogicalClock { timestamp: 1970-01-01T00:00:01Z, counter: 2, node_id: 00000000-0000-0000-0000-000000000000 }}, removes: {} }, values: {true: Max(false)} }
